plugins {
    id 'application'
    id 'maven-publish'
    id "com.github.node-gradle.node" version "5.0.0"
    id 'cz.habarta.typescript-generator' version '3.2.1263'
}

import java.nio.file.Files

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url "https://www.jetbrains.com/intellij-repository/releases/"
    }
    maven {
        url "https://cache-redirector.jetbrains.com/intellij-dependencies"
    }
}

group = 'com.maths22.ftc'
version = '1.0-SNAPSHOT'
description = 'division-switcher'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

node {
    download = true
}

application {
    mainClass = "com.maths22.ftc.DivisionSwitcher"
}

configurations {
    antBuild
}

dependencies {
    implementation group: "io.javalin", name: "javalin", version: "5.6.1"

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    implementation group: 'com.google.api-client', name: 'google-api-client', version: '2.2.0'
    implementation group: 'com.google.oauth-client', name: 'google-oauth-client-java6', version: '1.34.1'
    implementation group: 'com.google.apis', name: 'google-api-services-sheets', version: 'v4-rev20230526-2.0.0'
    implementation group: "org.slf4j", name: "slf4j-simple", version: "2.0.7"

    implementation group: "com.jetbrains.intellij.java", name: 'java-gui-forms-rt', version: '223.8214.59'

    antBuild group: 'com.jetbrains.intellij.java', name: 'java-compiler-ant-tasks', version: '223.8214.59'

    implementation files('lib/gozirra-0.4.1.jar')
}

tasks {
    generateTypeScript {
        jsonLibrary = 'gson'
        classesWithAnnotations = [
                'com.maths22.ftc.TypeScriptExport'
        ]
        mapEnum = 'asEnum'
        outputKind = "module"
        outputFileType = "implementationFile"
        outputFile = project.file("src/main/javascript/javaTypes.ts")
    }
}

task buildJsTask(type: NpmTask) {
    doFirst {
        Files.createDirectories(project.file("build/resources/main/serve").toPath())
    }

    args = ['run', 'build']

    dependsOn(tasks.generateTypeScript)
    dependsOn(tasks.npmInstall)

    processResources.dependsOn "buildJsTask"

    workingDir = project.file("src/main/javascript")
}

compileJava {
    inputs.files(fileTree('src/main/java').matching {
        include '**/*.form'
    })
    doLast {
        ant.taskdef name: 'instrumentIdeaExtensions', classname: 'com.intellij.ant.InstrumentIdeaExtensions', classpath: configurations.antBuild.asPath
        ant.instrumentIdeaExtensions(
                srcDir: 'src/main/java',
                destDir: sourceSets.main.output.classesDirs[0],
                bootClassPath: sourceSets.main.runtimeClasspath.asPath,
                includeantruntime: false
        )
    }
}

